From ce597fe8575a27e9a78143f2b92c410f3e0c0992 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lars=20Kj=C3=A6rgaard?= <larskj@gmail.com>
Date: Sun, 29 May 2016 14:44:58 +0200
Subject: [PATCH] Set the KMS scheduler to SCHED_FIFO max prio.

- This might have a bigger impact when the kernel
  is patched with the real time kernel.
---
 gfx/drivers_context/drm_ctx.c | 36 ++++++++++++++++++++++++++++++++++++
 1 file changed, 36 insertions(+)

diff --git a/gfx/drivers_context/drm_ctx.c b/gfx/drivers_context/drm_ctx.c
index a632d01..eef0713 100644
--- a/gfx/drivers_context/drm_ctx.c
+++ b/gfx/drivers_context/drm_ctx.c
@@ -40,6 +40,9 @@
 #include "../../runloop.h"
 #include "../common/drm_common.h"
 
+#include <unistd.h>
+#include <sched.h>
+
 #ifdef HAVE_EGL
 #include "../common/egl_common.h"
 #endif
@@ -371,6 +374,37 @@ static void gfx_ctx_drm_destroy_resources(gfx_ctx_drm_data_t *drm)
    g_next_bo           = NULL;
 }
 
+static void set_to_sched_fifo_max_prio(void)
+{
+   struct sched_param param = {0};
+
+   // Set highest possible priority for task
+   param.sched_priority = sched_get_priority_max(SCHED_FIFO);
+   if (sched_setscheduler(0, SCHED_FIFO, &param) < 0)
+      RARCH_ERR("[KMS/EGL]: Failed to set SCHED_FIFO priority.\n");
+
+   int sched = sched_getscheduler(getpid());
+
+   const char *scheduler;
+   switch (sched)
+   {
+      case SCHED_OTHER:
+         scheduler = "SCHED_OTHER";
+         break;
+
+      case SCHED_FIFO:
+         scheduler = "SCHED_FIFO";
+         break;
+
+      default:
+         scheduler = "Unrelated";
+   }
+
+   RARCH_LOG("[KMS/EGL]: Current scheduler: %s\n", scheduler);
+   if (sched == SCHED_FIFO)
+      RARCH_LOG("[KMS/EGL]: SCHED_FIFO prio: %d\n", param.sched_priority);
+}
+
 static void *gfx_ctx_drm_init(void *video_driver)
 {
    int fd, i;
@@ -384,6 +418,8 @@ static void *gfx_ctx_drm_init(void *video_driver)
    if (!drm)
       return NULL;
 
+   set_to_sched_fifo_max_prio();
+
    fd   = -1;
    gpu_descriptors = dir_list_new("/dev/dri", NULL, false, false);
 
-- 
2.7.4

